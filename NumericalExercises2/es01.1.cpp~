#include <fstream>
#include <vector>
#include <iostream>
#include <cmath>
#include "random.h"
#include "error.h"

using namespace std;

int main (){




   Random rnd;
   int seed[4];
   int p1, p2;
   ifstream Primes("Primes");
   if (Primes.is_open()){
      Primes >> p1 >> p2 ;
   } else cerr << "PROBLEM: Unable to open Primes" << endl;
   Primes.close();

   ifstream input("seed.in");
   string property;
   if (input.is_open()){
      while ( !input.eof() ){
         input >> property;
         if( property == "RANDOMSEED" ){
            input >> seed[0] >> seed[1] >> seed[2] >> seed[3];
            rnd.SetRandom(seed,p1,p2);
         }
      }
      input.close();
   } else cerr << "PROBLEM: Unable to open seed.in" << endl;


	int M=1e5, N=100, L=(M/N), k;
	double sum;
	vector<double> x;
	vector<double> ave (N,0.);
	vector<double> ave2 (N,0.);
	vector<double> sum_prog (N,0.);
	vector<double> sum2_prog (N,0.);
	vector<double> err_prog (N,0.);
	vector<double> r;


	for (int h=0; h<N; h++) x.push_back(h*L);
	for (int h=0; h<M; h++) r.push_back(rnd.Rannyu());

	for(int i=0; i<N; i++){
		sum=0;
		for (int j=0; j<L; j++){
			k=j+i*L;
			sum += r[k];
		}
		ave[i]=sum/L;
		ave2[i]=ave[i]*ave[i];
	}

	for(int i=0; i<N; i++){
		for (int j=0; j<(i+1); j++){
			sum_prog[i] += ave[j];
			sum2_prog[i] += ave2[j];
		}
		sum_prog[i] /= (i+1);
		sum2_prog[i] /= (i+1);
		err_prog[i]=error(sum_prog, sum2_prog, i);
	}

	ofstream out;
	out.open("results1.1.txt");

	for (int h=0; h<N; h++)
		out << x[h] << "	" << (sum_prog[h]-0.5) << "	" << err_prog[h] << endl;

	out.close();



   rnd.SaveSeed();
	return 0;
}


